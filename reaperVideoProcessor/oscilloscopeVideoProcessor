//Decorative Oscilloscope with Blitter (requires JSFX video sample peeker)
//@gmem=jsfx_to_video
//@param 1:mode "mode" 0 0 2 0 1
//@param 2:dotcount "point count" 1200 10 9600 400 10
//@param 3:dotsize "point size" 4 1 40 20 1
//@param 4:gain_db "gain (dB)" -6 -80 12 -12 1
//@param 5:zoom_amt "blitter zoom" .27 -.5 1 .1 0.01
//@param 6:fadespeed "blitter persist" .8 0 1 .1 0.01
//@param 7:filter "blitter filter" 1 0 1 0 1
//@param 8:fg_r "foreground R" 1 0 1 .5 .02
//@param 9:fg_g "foreground G" 1 0 1 .5 .02
//@param 10:fg_b "foreground B" 1 0 1 .5 .02
//@param 11:bg_r "background R" 0 0 1 .5 .02
//@param 12:bg_g "background G" 0 0 1 .5 .02
//@param 13:bg_b "background B" 0 0 1 .5 .02
//@param 14:cx "center X" .5 0 1 .5 .01
//@param 15:cy "center Y" .5 0 1 .5 .01

last_frame && fadespeed > 0 ? (
  xo = project_w*zoom_amt*.25;
  yo = project_h*zoom_amt*.25;
  gfx_mode=filter>0?0x100:0;
  xo < 0 ? gfx_blit(last_frame,0);
  gfx_blit(last_frame,0,0,0,project_w,project_h,xo,yo,project_w-xo*2,project_h-yo*2);
);
gfx_set(bg_r,bg_g,bg_b,last_frame ? (1-fadespeed) : 1);
gfx_a>.001 ? gfx_fillrect(0,0,project_w,project_h);


bufplaypos = gmem[0];
bufwritecursor = gmem[1];
bufsrate = gmem[2];
bufstart = gmem[3];
bufend = gmem[4];
nch = gmem[5];
gain = 10^(gain_db*(1/20));

dt=max(bufplaypos - project_time,0);
dt*bufsrate < dotcount ? underrun_cnt+=1;
rdpos = bufwritecursor - ((dt*bufsrate - dotcount)|0)*nch;
rdpos < bufstart ? rdpos += bufend-bufstart;

rot=-225*0.017453292;
function getpt()
(
  r = gmem[rdpos]; l = gmem[rdpos+1];
  (rdpos += nch)>=bufend ? rdpos=bufstart;
);

gfx_set(fg_r + 0.1*r, fg_g + 0.1*r ,fg_b + 0.1*r , 1);

i=0;

mode==2 ? (
  loop(dotcount,
    getpt();
    ang = atan2(l,r); dist = sqrt(sqr(l)+sqr(r));
    ang -= rot;
    xp = cx*project_w + ((cos(ang)*dist*gain)*project_h-dotsize)*.5;
    yp = ((cy*2+sin(ang)*dist*gain)*project_h-dotsize)*.5;
    
    gfx_fillrect(xp,yp, dotsize,dotsize);
    //gfx_fillrect(xp-2, yp-2, dotsize,dotsize);
    
  );
) : mode == 1 ? (
  loop(dotcount,
    getpt();
    yp = project_h * (cy - .5 + i / dotcount);
    xp = project_w * (cx + (l+r)*.25*gain);
    gfx_fillrect(xp-dotsize*.5,yp-dotsize*.5, dotsize,dotsize);
    i+=1;
  );

) : (
  loop(dotcount,
    getpt();
    xp = project_w * (cx - 0.5 + i / dotcount);
    yp = project_h * (cy + (l+r)*.25*gain);
    gfx_fillrect(xp-dotsize*.5,yp-dotsize*.5, dotsize,dotsize);
    i+=1;
  );
);

gfx_img_free(last_frame);
last_frame=gfx_img_hold(-1);